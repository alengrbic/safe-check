{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","setHundreds","e","setState","hundreds","parseInt","target","value","setFifties","fifties","setTwenties","twenties","setTens","tens","setTwo","twoEuro","setOne","oneEuro","setFifty","fiftyCents","setTwenty","twentyCents","setTen","tenCents","setFive","fiveCents","setTwoCent","twoCents","setOneCent","oneCents","onSubmit","preventDefault","totalNotes","state","totalCoins","subtotal","style","textAlign","action","this","type","onChange","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.89d4d376.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //notes\n      hundreds: 0,\n      fifties: 0,\n      twenties: 0,\n      tens: 0,\n      totalNotes: 0,\n\n      //coins\n      twoEuro: 0,\n      oneEuro: 0,\n      fiftyCents: 0,\n      twentyCents: 0,\n      tenCents: 0,\n      fiveCents: 0,\n      twoCents: 0,\n      oneCents: 0,\n      totalCoins: 0,\n\n      //total\n      subtotal: 0,\n    };\n  }\n\n  //setters for notes\n  setHundreds = (e) => {\n    this.setState({ hundreds: parseInt(e.target.value) * 100 });\n  };\n\n  setFifties = (e) => {\n    this.setState({ fifties: parseInt(e.target.value) * 50 });\n  };\n\n  setTwenties = (e) => {\n    this.setState({ twenties: parseInt(e.target.value) * 20 });\n  };\n\n  setTens = (e) => {\n    this.setState({ tens: parseInt(e.target.value) * 10 });\n  };\n  //end setters for notes\n\n  //setters for coins\n  setTwo = (e) => {\n    this.setState({ twoEuro: parseInt(e.target.value) * 50 });\n  };\n  setOne = (e) => {\n    this.setState({ oneEuro: parseInt(e.target.value) * 25 });\n  };\n  setFifty = (e) => {\n    this.setState({ fiftyCents: parseInt(e.target.value) * 25 });\n  };\n  setTwenty = (e) => {\n    this.setState({ twentyCents: parseInt(e.target.value) * 10 });\n  };\n  setTen = (e) => {\n    this.setState({ tenCents: parseInt(e.target.value) * 10 });\n  };\n  setFive = (e) => {\n    this.setState({ fiveCents: parseInt(e.target.value) * 5 });\n  };\n  setTwoCent = (e) => {\n    this.setState({ twoCents: parseInt(e.target.value) * 2 });\n  };\n  setOneCent = (e) => {\n    this.setState({ oneCents: parseInt(e.target.value) * 1 });\n  };\n  //end setters for coins\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      totalNotes:\n        this.state.hundreds +\n        this.state.fifties +\n        this.state.twenties +\n        this.state.tens,\n    });\n\n    this.setState({\n      totalCoins:\n        this.state.twoEuro +\n        this.state.oneEuro +\n        this.state.fiftyCents +\n        this.state.twentyCents +\n        this.state.tenCents +\n        this.state.fiveCents +\n        this.state.twoCents +\n        this.state.oneCents,\n    });\n\n    this.setState({ subtotal: this.state.totalNotes + this.state.totalCoins });\n  };\n\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <form action=\"\" onSubmit={this.onSubmit}>\n          <h3>Notes:</h3>\n          <p>\n            <strong>Enter number of notes</strong>\n          </p>\n          <p>\n            100 Euro <input type=\"text\" onChange={this.setHundreds} />{\" \"}\n            {this.state.hundreds > 0 ? this.state.hundreds : 0}\n          </p>\n\n          <p>\n            50 Euro <input type=\"text\" onChange={this.setFifties} />{\" \"}\n            {this.state.fifties > 0 ? this.state.fifties : 0}\n          </p>\n\n          <p>\n            20 Euro <input type=\"text\" onChange={this.setTwenties} />{\" \"}\n            {this.state.twenties > 0 ? this.state.twenties : 0}\n          </p>\n\n          <p>\n            10 Euro <input type=\"text\" onChange={this.setTens} />{\" \"}\n            {this.state.tens > 0 ? this.state.tens : 0}\n          </p>\n\n          <h3>Coins:</h3>\n          <p>\n            <strong>Enter number of coins</strong>\n          </p>\n          <p>\n            2 Euro <input type=\"text\" onChange={this.setTwo} />{\" \"}\n            {this.state.twoEuro > 0 ? this.state.twoEuro : 0}\n          </p>\n          <p>\n            1 Euro <input type=\"text\" onChange={this.setOne} />{\" \"}\n            {this.state.oneEuro > 0 ? this.state.oneEuro : 0}\n          </p>\n          <p>\n            50 Cents <input type=\"text\" onChange={this.setFifty} />{\" \"}\n            {this.state.fiftyCents > 0 ? this.state.fiftyCents : 0}\n          </p>\n          <p>\n            20 Cents <input type=\"text\" onChange={this.setTwenty} />{\" \"}\n            {this.state.twentyCents > 0 ? this.state.twentyCents : 0}\n          </p>\n          <p>\n            10 Cents <input type=\"text\" onChange={this.setTen} />{\" \"}\n            {this.state.tenCents > 0 ? this.state.tenCents : 0}\n          </p>\n          <p>\n            5 Cents <input type=\"text\" onChange={this.setFive} />{\" \"}\n            {this.state.fiveCents > 0 ? this.state.fiveCents : 0}\n          </p>\n          <p>\n            2 Cents <input type=\"text\" onChange={this.setTwoCent} />{\" \"}\n            {this.state.twoCents > 0 ? this.state.twoCents : 0}\n          </p>\n          <p>\n            1 Cent <input type=\"text\" onChange={this.setOneCent} />{\" \"}\n            {this.state.oneCents > 0 ? this.state.oneCents : 0}\n          </p>\n\n          <button type=\"submit\">Calculate</button>\n        </form>\n\n        <p>\n          Total Notes = {this.state.totalNotes > 0 ? this.state.totalNotes : 0}\n        </p>\n        <p>\n          Total Coins = {this.state.totalCoins > 0 ? this.state.totalCoins : 0}\n        </p>\n        <button\n          onClick={() => {\n            this.setState({\n              subtotal: this.state.totalNotes + this.state.totalCoins,\n            });\n          }}\n        >\n          Calculate Total\n        </button>\n        <p>\n          Total Counted = {this.state.subtotal > 0 ? this.state.subtotal : 0}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}